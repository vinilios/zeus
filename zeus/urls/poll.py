from django.conf.urls import include, patterns, url
from zeus.urls.forum import urlpatterns as forum_patterns

poll_patterns = patterns('',
    url(r'^get-randomness$', 'zeus.views.shared.get_randomness'),
)

poll_patterns += patterns('zeus.views.poll',
    url(r'^remove$', 'remove', name='election_poll_remove'),
    url(r'^edit$', 'add_edit', name='election_poll_edit'),
    url(r'^cast$', 'cast', name='election_poll_cast'),
    url(r'^cast-done$', 'cast_done', name='election_poll_cast_done'),
    url(r'^audited-ballot$', 'audited_ballots',
        name='election_poll_audited_ballots'),
    url(r'^post-audited-ballot$', 'post_audited_ballot',
        name='election_poll_post_audited_ballot'),
    url(r'^s/(?P<fingerprint>.*)$', 'download_signature',
        name='election_poll_download_signature'),
    url(r'^questions$', 'questions', name='election_poll_questions'),
    url(r'^questions/manage$', 'questions_manage',
        name='election_poll_questions_manage'),
    url(r'^voters$', 'voters_list',
        name='election_poll_voters'),
    url(r'^encrypted-tally$', 'get_tally', name='election_poll_get_tally'),
    url(r'^post-decryptions$', 'upload_decryption',
        name='election_poll_upload_decryption'),
    url(r'^voters/csv/(?P<fname>[^/]+).csv$', 'voters_csv',
        name='election_poll_voters_csv'),
    url(r'^voters/clear$', 'voters_clear', name='election_poll_voters_clear'),
    url(r'^voters/upload$', 'voters_upload',
        name='election_poll_voters_upload'),
    url(r'^voters/upload-cancel$', 'voters_upload_cancel',
        name='election_poll_voters_upload_cancel'),
    url(r'^voters/email$', 'voters_email', name="election_poll_voters_email"),
    url(r'^voters/email/(?P<voter_uuid>[^/]+)$', 'voters_email', name="election_poll_voter_email"),
    url(r'^voters/(?P<voter_uuid>[^/]+)/delete$', 'voter_delete',
        name="election_poll_voter_delete"),
    url(r'^voters/(?P<voter_uuid>[^/]+)/exclude$', 'voter_exclude',
        name="election_poll_voter_exclude"),
    url(r'^l/(?P<voter_uuid>[^/]+)/linked-booth-login',
        'voter_booth_linked_login', name="election_poll_voter_booth_linked_login"),
    url(r'^results$', 'results', name='election_poll_results'),
    url(r'^l/(?P<voter_uuid>[^/]+)/(?P<voter_secret>[^/]+)$',
        'voter_booth_login', name="election_poll_voter_booth_login"),
    url(r'^results$', 'results', name='election_poll_results'),
    url(r'^results.json$', 'results_json', name='election_poll_results_json'),
    url(r'^results-(?P<language>.*).pdf$', 'results_file', name='election_poll_results_pdf',
        kwargs={'ext': 'pdf'}),
    url(r'^results-(?P<language>.*).csv$', 'results_file', name='election_poll_results_csv',
        kwargs={'ext': 'csv'}),
    url(r'^proofs.zip$', 'zeus_proofs', name='election_poll_zeus_proofs'),
    url(r'^sms_delivery$', 'sms_delivery', name='election_poll_sms_delivery'),
)

urlpatterns = patterns('zeus.views.poll',
    url(r'^$', 'list', name='election_polls_list'),
    url(r'^add$', 'add_edit', name='election_polls_add'),
    url(r'^(?P<poll_uuid>[^/]+)/', include(poll_patterns)),
    url(r'^(?P<poll_uuid>[^/]+)/forum/', include(forum_patterns)),
    url(r'^(?P<poll_uuid>[^/]+).json', 'to_json',
        name='election_poll_json'),
)
